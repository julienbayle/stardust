<?xml version="1.0"?>
<robot name="r1" xmlns:xacro="http://ros.org/wiki/xacro">
    <xacro:property name="body_height" value="0.130" />
    <xacro:property name="body_ground_spacing" value="0.01" />
    <xacro:property name="body_wheel_to_center" value="0.175" />

    <xacro:property name="wheel_length" value="0.026" />
    <xacro:property name="wheel_radius" value="0.029" />
    <xacro:property name="wheel_roller_number" value="10" />
    <xacro:property name="wheel_roller_margin" value="0.001" />
    <xacro:property name="wheel_roller_radius" value="${wheel_radius/wheel_roller_number}" />
    <xacro:property name="wheel_roller_length" value="${pi * (wheel_radius - 2 * wheel_roller_radius) / wheel_roller_number}" />
    
    <xacro:property name="wheel_effort_max" value="10000" />
    <xacro:property name="wheel_velocity_max" value="10000" />

    <xacro:property name="imu_x" value="0.0" />
    <xacro:property name="imu_y" value="0.0" />
    <xacro:property name="imu_z" value="0.12" />

    <xacro:property name="lidar_x" value="0.0" />
    <xacro:property name="lidar_y" value="0.0" />
    <xacro:property name="lidar_z" value="0.020" />
    <xacro:property name="lidar_angle" value="${2 * pi / 3}" />

    <xacro:include filename="$(find sd_description)/urdf/materials.xacro" />

    <link name="base_link"/>

    <link name="body_link">
        <visual>
            <geometry>
				<mesh filename="package://sd_description/meshes/r1_base.stl" scale="0.00093 0.00093 0.00093"/>
            </geometry>
            <material name="red"/>
            <origin xyz="0 0 0" rpy="0 0 ${pi}"/>
        </visual>
        <collision>
            <geometry>
				<mesh filename="package://sd_description/meshes/r1_base.stl" scale="0.00093 0.00093 0.00093"/>
            </geometry>
        </collision>
        <inertial>
			<mass value="4.2"/>
			<inertia ixx="3e-2" ixy="0.0" ixz="0.0" iyy="3e-2" iyz="0.0" izz="4e-2"/>
            <origin xyz="0 0 ${-body_height / 4}" rpy="0 0 0"/>
        </inertial>
    </link>

    <joint name="body_to_base" type="fixed">
        <parent link="base_link"/>
        <child link="body_link"/>
        <origin xyz="0 0 ${- wheel_radius + body_ground_spacing}" rpy="0 0 0"/>
    </joint>

    <!-- One roller of the wheel -->
    <xacro:macro name="roller" params="parent name xyz rpy">
        <link name="roller_${name}_${parent}_link">
            <inertial>
                <mass value="0.002"/>
                <inertia ixx="2.5e-08" ixy="0" ixz="0" iyy="2.5e-08" iyz="0" izz="1.5e-08"/>
            </inertial>
            <visual>
                <geometry>
                    <cylinder length="${wheel_roller_length}" radius="${wheel_roller_radius}"/>
                </geometry>
                <material name="white"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder length="${wheel_roller_length}" radius="${wheel_roller_radius}"/>
                </geometry>
            </collision>
        </link>
        <joint name="roller_${name}_${parent}_to_${parent}" type="continuous">
            <parent link="${parent}_link"/>
            <child link="roller_${name}_${parent}_link"/>
            <axis xyz="0 0 1"/>
            <origin xyz="${xyz}" rpy="${rpy}" />
        </joint>

        <transmission name="roller_${name}_${parent}_to_${parent}_transmission">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="roller_${name}_${parent}_to_${parent}">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
            </joint>
            <actuator name="roller_${name}_${parent}_to_${parent}_actuator">
                <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>

    <!-- Roller loop -->
    <xacro:macro name="roller_loop" params="parent roller_i z prefix phase">
        <xacro:if value="${roller_i}">
            <xacro:roller 
                parent="${parent}" name="${prefix}_${roller_i}" 
                xyz="   ${(wheel_radius - wheel_roller_radius) * cos(phase + 2 * pi * roller_i / wheel_roller_number)} 
                        ${(wheel_radius - wheel_roller_radius) * sin(phase + 2 * pi * roller_i / wheel_roller_number)} 
                        ${z}" 
                rpy="   ${- phase + pi / 2 - 2 * pi * roller_i / wheel_roller_number} 
                        ${pi / 2} 
                        0" />
            <xacro:roller_loop parent="${parent}" roller_i="${roller_i - 1}" z="${z}" prefix="${prefix}" phase="${phase}"/>
        </xacro:if>
    </xacro:macro>

    <!-- Whell with rollers -->
    <xacro:macro name="omni_wheel" params="name angle">
        <link name="${name}_wheel_link">
            <visual>
                <geometry>
                    <cylinder length="${wheel_length}" radius="${wheel_radius - 2 * wheel_roller_radius - wheel_roller_margin}"/>
                </geometry>
                <material name="black"/>
            </visual>
            <collision>
                <geometry>
                    <cylinder length="${wheel_length}" radius="${wheel_radius - 2 * wheel_roller_radius - wheel_roller_margin}"/>
                </geometry>
            </collision>
            <inertial>
                <mass value="0.3"/>
                <inertia ixx="2e-4" ixy="0.0" ixz="0.0" iyy="2e-4" iyz="0.0" izz="2.5e-4"/>
            </inertial>
        </link>

        <joint name="${name}_wheel_to_base" type="continuous">
            <parent link="base_link"/>
            <child link="${name}_wheel_link"/>
            <limit effort="${wheel_effort_max}" velocity="${wheel_velocity_max}"/>
            <axis xyz="0 0 1"/>
            <origin 
                xyz="       ${(body_wheel_to_center - wheel_length / 2) * cos(angle)} 
                            ${(body_wheel_to_center - wheel_length / 2) * sin(angle)} 
                            0" 
                rpy="       ${-pi / 2} 
                            0 
                            ${pi / 2 + angle}"/>
        </joint>

        <xacro:roller_loop  
                parent=     "${name}_wheel" prefix="ext" 
                roller_i=   "${wheel_roller_number}" 
                z=          "${wheel_length / 4}" 
                phase=      "${pi / wheel_roller_number}" />
        <xacro:roller_loop  
                parent=     "${name}_wheel" prefix="int" 
                roller_i=   "${wheel_roller_number}" 
                z=          "${- wheel_length / 4}" 
                phase=       "0" />
        
        <transmission name="${name}_wheel_to_base_transmission">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="${name}_wheel_to_base">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
            </joint>
            <actuator name="${name}_wheel_to_base_actuator">
                <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>

    <omni_wheel name="left" angle="${pi / 3}"/>
    <omni_wheel name="right" angle="${-1 * pi / 3}"/>
    <omni_wheel name="back" angle="${pi}"/>

    <link name="imu_link">
    </link>

    <joint name="imu_to_body" type="fixed">
        <parent link="body_link"/>
        <child link="imu_link"/>
        <origin xyz="${imu_x} ${imu_y} ${imu_z}" rpy="0 ${pi} 0"/>
    </joint>

    <xacro:include filename="$(find ydlidar)/urdf/ydlidar.urdf"/>

    <joint name="lidar_to_body" type="fixed">
        <parent link="body_link"/>
        <child link="base_laser"/>
        <origin xyz="${lidar_x} ${lidar_y} ${lidar_z}" rpy="0 0 ${lidar_angle}"/>
    </joint>
</robot>
