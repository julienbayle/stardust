#!/usr/bin/env python
PACKAGE = "sd_localization"

from dynamic_reconfigure.parameter_generator_catkin import *
from math import *

gen = ParameterGenerator()

gen.add("active", bool_t, 0, "Enable snap map node", True)

gen.add("scan_rate", double_t, 0, "Maximum rate to accept scans (in Hz)", 2.0, 0.0, 100.0)
gen.add("age_threshold", double_t, 0, "Maximum age of a scan to be accounted (in seconds)", 1.0, 0.0, 100.0)

gen.add("icp_inlier_dist", double_t, 0, "Distance a point can have to its nearest neighbor in map to be still considered as inlier (in meters)", 0.1, 0.0, 100.0)
gen.add("icp_inlier_threshold", double_t, 0, "Percentage of scan points that must match withing icp_inlier_dist so that the match is considered good and a initial pose can be sent", 0.9, 0.0, 1.0)
gen.add("icp_num_iter", int_t, 0, "Number of iterations in ICP", 250, 1, 1000)
gen.add("angle_upper_threshold", double_t, 0, "Maximum icp transform angle considered a sane match for initial pose (in radians)", 0.5236, 0.0, pi * 2.0)

gen.add("dist_change_threshold", double_t, 0, "Minimum position change that will trigger a re-initialisation of amcl (in meters)", 0.05, 0.0, 100.0)
gen.add("angle_change_threshold", double_t, 0, "Minimum angle change that will trigger a re-initialisation of amcl (in radians)", 0.01, 0.0, pi * 2.0)
gen.add("update_age_threshold", double_t, 0, "How long before another, new initial pose will be sent after one was sent (in seconds)", 0.0, 0.0, 100.0)
gen.add("pose_covariance_trans", double_t, 0, "Translational pose covariance the initial pose gets sent with", 1.5, 0.0, 100.0)

gen.add("publish_monitoring", bool_t, 0, "Enable monitoring msg publication", False)

exit(gen.generate(PACKAGE, "sd_localization", "SnapMap"))